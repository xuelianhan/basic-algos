LC138.CopyListWithRandomPointer
只用 + - 两个符号实现乘法，不能用位运算等符号
------------------------
电面：bfs求最短路径
onsite一面：最长上升子序列
onsite二面：二叉树最近公共祖先
-------------------------
问了多线程会打架的问题，加lock；
list的common list，用hash；
bit 运算 还有一个 recursion。
-------------------------
一面的时候问了一下项目，出了一个简单的股票买卖问题的算法题，
二面的时候问了一些behavior question的问题，又出了两个中等难度的算法题
-------------------------
coding设计实现链表（单向），需要自己定义节点、链表类。面试时候分两部分给出要求，第一部分要求实现add, remove, transverse。
第二部分要求实现打印链表的中间位置节点。
我当时是先和面试官明确了是单向链表还是双向链表，节点的数据类型是什么，
之后和面试官说了一下大概的思路，询问并确定了需要支持哪些API。
实现每个操作时，我都和面试官说明了思路，并且写了注释，最后写代码。
打印中间位置节点，我是先遍历链表，之后奇偶讨论做的，
后来发现还可以用快慢指针做。
-------------------------
先是网上答题进行初步面试，难度大概相当于leetcode中等里偏简单的那些
网上答题通过后邀请onsite
难度大概相当于leetcode里中等偏难的那些题目
一共5轮，主要是算法，穿插着有一些design
最终获得offer
-------------------------
java基础和某些实现问的多。
jvm相关和调优相关的问题也涉及了一些。
会根据你的简历问一些具体项目上的技术相关问题。
-------------------------
校招，分成两部分。
1. 笔试
一共三道题，都是easy 难度。
2. 视频面试
一共三个小时，每个一小时。
第一轮：先做自我介绍，然后问了一道如果 tight deadline 你会怎么办。
这个题其实就是想要把你的故事里面融合 leadership principle.
可以提前准备。
最后写代码，问了一道 prefix sum 的题。
先用 prefix sum 然后用 binary search 做。
第二轮：先做自我介绍，然后问了 HashMap 和 List，Array 这些基础的数据结构。
最后写代码，问了一道 priority queue的题。很简单。leetcode 刷烂了。
第三轮：先做自我介绍，然后问了 behavior quesiton, 问你最难忘的一个项目是什么。
主要考察 customer obsession. 最后写代码，问了一道变种的 two sum.
思路一样，只是用一个 class 包装起来了。
-------------------------
完成一个初创公司迁移到aws的解决方案设计
回答解决方案设计中的问题。问的会比较细节。
-------------------------
第一轮在线code ,比较有难点，类似于leetcode 中等以上级别，并且是全英文的。
二轮是远程视频面试，面试官比较nice, 问的问题难点中等。
-------------------------
设计九键键盘并计算一串字符串的最小需要按键次数
-------------------------
第一轮： 笔试
2题，leetcode medium
第二轮： 电话面试
做题， 三数求和
第三轮： 电面
做题2 道， 都是backtrace的，
一道关于岛屿， 碰到阿三， 挂
-------------------------
问了什么时候用二分搜索
-------------------------
亚马逊社招Java4轮面试
前两轮算法4道题目，分别是最长合法括号，字符串匹配（KMP），非递归的树遍历，哈希表的一个应用。
后两轮是系统设计，一个是评论功能，一个是云存储服务，问的很细节
-------------------------
一道BFS问题 解答后继续追问细节，如HashMap复杂度、分布式处理等。
随后是几个behavior question，
问如何处理比较紧的截止日期、遇到的有挑战性的工作等。
-------------------------
需要Java基础扎实，面试实际多刷题就能过，心态要好，
行为面试的准备要充分，准备几个故事套进亚马逊精神里。
-------------------------
3轮oa+3轮virtual onsite,
oa1 9道改错，
oa2 两道算法题
oa3 work simulation和逻辑题。
vo主要是bq和算法
-------------------------
四轮on site
第一轮，design amazon video
第二轮，Serialize and Deserialize Binary Tree, 节点里存string
第三轮，course schedule，
第四轮，design elevator。
-------------------------
hash可逆吗？
-------------------------
面试过程很不错，分为系统设计和coding面试，
系统设计会给你出一道题，比如设计一个airbnb类型的网站，主要是有哪些模块，考察面向对象。
coding主要是算法题，leetcode刷题，非常关键
-------------------------
因为是远程面试，所以是在线类似notepad写code。
亚马逊内部有一个专门写code的网站，不能直接run代码。
面的两个组，都是一轮code，一轮design，一轮HR/Manager。
-------------------------
是Hiring Event. 3轮算法和1轮system design. BQ和算法同等重要，亚马逊很注重契合度。
-------------------------
6轮面试，主要是设计问题和算法问题，算法题不是很困难，不是一定要求最优方案，重点考察思路。
设计问题要求讲仔细，很看重。
-------------------------
HR简单沟通，接下来Phone Interview，大概1个小时，
前半小时聊项目，后半小时一个算法题给一个邻接矩阵，代表国家相连，求大洲的数量。
leetcode 孤岛数量问题。本质是图的联通分支数量问题，medium难度。
需要DFS算法，由于图相关的算法有点忘了，有多处错误，基本没戏。
-------------------------
3轮coding，1轮设计，1轮bq
-------------------------
一共90分钟两道编程题，15分钟分析时间复杂度还有分析思路，时间有点紧。
第一题是log file 的排序。（根据数据在后，字母在前的顺序对String array 里面第二个element进行排序）思路是写一个comparator 重写 compare方法。
第二题是飞机送货 two sum  max问题。
思路是用遍历两个array，用两个for loop，取两个array的element相加，
然后看是否大于total distance，若大于全局变量max，则更新list，加到结果里。
Q：飞机送货 two sum max问题。
-------------------------
leetcode单词接龙题
-------------------------
一轮纯behavior question，问了很多做过的项目的细节，
三轮中等难度算法题（二叉树序列化，group anagram，BFS），设计支付系统和excel。
-------------------------
输入一个字符串，如何求最大重复出现的字符串呢？
比如输入ttabcftrgabcd,输出结果为abc，canffcancd,输出结果为can，leetcode原题
-------------------------
将一个数字字符串转换成数字
-------------------------
写一个你最熟悉的排序算法，要求时间复杂度为o
-------------------------
底特律亚马逊SDE2 Onsite面试
面试时间差不多大半天，早上10:00开始到下午2:30包括吃饭。
全程五轮加吃饭。
每轮45-55分钟，40分钟做题目，5-10分钟你提问。
 第一轮算法，
 第二轮人事经理聊天聊之前经验，
 第三轮数据结构，
 第四轮设计，
 第五轮综合，半聊天半算法，两个技术经理。吃饭AMAZON员工陪同聊天吃饭。
 第一轮第三轮相对基础点，设计全凭经验，扩展范围有点广，全看面试官的想法。
 题目估计都是他们平时遇到过的问题。
  由于第一轮有点紧张做的很差，最后一轮也卡了，所以估计是这个原因。
  总的来说体验很好，气氛轻松。最后一轮会有点难。
Q：多看看面经算法题，数据结构题，设计题一般是没问题的。
-------------------------
亚马逊的海外Hiring Event
亚马逊每年都会有海外的职位到北京来做Hiring Event，一般是发邮件邀请，接受邀请发过简历之后会有一次在线的编码测试，普通难度，
通过了以后约面试，一般是半天，招聘组在北京3-5天，选择其中的一天。
 面试当天在酒店，首先会有招聘组织者对来应聘的几个人介绍一下招聘的site情况，一般是西雅图或者温哥华。
 然后每个应聘者会被分配到一个会议室，进行大约四轮面试，每轮一小时。
 应聘者始终待在会议室内，面试官每小时更换，每轮的侧重点不尽相同，
 涉及OOD设计，基本的编程问题（我面到的问题是二叉树相关），
 系统设计（亚马逊商品页面的布局和操作响应），
 介绍项目经历，软技能（如何与处理刺头同事的关系），
 进阶的编程问题（二维数组迷宫的广度优先遍历）。
 面试结束后告知等邮件通知，因为招聘的人比较少所以机会很难把握，整体面试的难度并不高，
 但如果对电商不够了解的话会在系统设计上略吃亏。
 缺点：通知面试不通过后，明确说明不能告知不通过的原因，仅给出不通过的结果。
Q：OOD设计
系统设计
二维数组迷宫的广度优先遍历
-------------------------
一个上午安排两次面试，一次面试一个小时一面,让我介绍工作中一些改进的地方，结合自己的项目。
让做技术题目，二叉查找树的删除，会引导你，但是如果你做不出来，细节处理不好肯定就减分。
二面,直接技术面试。没通过。哭。
Q：二叉查找树的删除。
-------------------------
Q：举一个例子：工作或工程项目中遇到的挑战，如何克服的？
-------------------------
亚马onsite面胫。
我每轮BQ都被问很久，几乎都半小时以上，
不知道是不是因为我准备没有那么完全，
所以有时候不一定完全答在他们的点上，建议大家还是多多准备亚马的BQ，
下面就讲技术的题目。
1. 找离你最近的几个人跟你的最大共同兴趣，基本上会给列出所有离你多少距离的人的API，还有根据人列出他所有兴趣的API。
楼主最后是用inverted index加快兴趣的查找速度，然后用heap找出最大共同兴趣，
面试官似乎对我最后用heap表示肯定与讶异，说之前没有人回答到要用heap；
2. 还加上一些exception handling；
3. design question，这轮BQ问了40分钟，害我原本以为整轮都BQ了，
设计问题不难，就是用户到一个产品的网页要如何显示前五个相关的推荐产品，
要求低letency，高availability，
一开始先随便嘴了这样的前提我们可能会牺牲consistency之类的，
然后原本想要慢慢从user case开始讲，只是他要求直接讲架构，
就开始开开心心的画出多个load balancer，
多个application server，
然后讨论DB，加上cache加快query的速度之类的，blablabla。
最后shadow的面试官好像看到主面试官被我唬得一愣一愣的，
就加了一个比较难的怎么处理distibuted cache的问题，
好险，马上时间就到了，不然感觉shadow的manager还有想要问的。
4. 不过只需要返回一个解，楼主马上就往DP的方向走，
不过主面试官好像没有看过DP的解法，最后都是跟manager在讨论，
manager好像满兴奋我用DP解的，努力的把code写完讨论完后时间就差不多了，
感觉原本面试官预期的是类似search之类的2^n解法，最后对时间複杂度感到非常肯定，
虽然感觉没有很确定我的解法到底对不对，拍了照回去研究。
1point 3acres。
感觉四轮下来技术题都答得不错，应该有一两轮可以算超出他们的预期，
只是BQ没有准备的非常充分，实在感觉不出来有没有回答在点上，
offer在两天之后就来了 (其实听小recruiter说是隔天就决定给了)，
非常快速的安排了跟几个hiring manager谈，也非常快速的说希望一个星期答复
(楼主诚实的说了之后还要跟F还有G的onsite，不知道是不是把他们逼急了)，目前正在想要怎么negotiate中。
----------------------------------
两轮onsite的面试。每轮一小时。
一轮面算法，面了两道算法题，基本都是由浅入深。
第一题是字符串排重并排序的问题，基本上还好做。但是要白板上手写，一堆错误。
大家在面试前还是多准备下手写代码。面试官还是很nice的，会一步步引导你优化算法实现。
第二题是一个dijkstra算法，因为算法不是强项，没写出来。
第二轮是面系统设计题，就是让你设计实现一个系统，
说说里面的类设计，面向对象设计等等。
因为算法感觉做得不大好，估计是没戏了。
Q：字符串排重并排序。
----------------------------------